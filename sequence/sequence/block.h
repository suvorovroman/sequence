#include "defs.h"

/** \brief Блок последовательности.
*
*	Блок памяти, который единовременно отводится для группы значений последовательности. Размер памяти, отводимый блоку
*	кратен двум. При создании блока он имеет минимальный размер, который нужен для хранения одного значения. По мере 
*	добавления значений в блок его размер увеличивается вдвое пока не достигнет максимального размера в 2^15. После
*	чего создается новый блок. Блоки последовательности объединяются в цепочку так, что новые блоки добавляются в начало.
*/
struct block
{
	/** Слово состояния блока. */
	struct
	{
		/** \brief Размер области значений.
		*
		*	Хранится только степень 2 размера из диапазона [0, 15], т.е. размер
		*	области значений может быть от 1 (2^0) до 32768(2^15).
		*/
		unsigned int exponent_of_size : 4;	
				
		/** \brief Смещение до первого свободного бита.
		*
		*	Смещение до первого свободного бита в незаполненном байте области значений.
		*/
		unsigned int offset_of_free_bit : 28;
	} tag;	
	
	/**	\brief	Указатель на предыдущий блок цепочки.
	*
	*	Блоки образуют цепочку, в начале которой находится последний по времени созданный блок.
	*/
	struct block* previous;
	
	/**	\brief	Указатель на область значений.
	*
	*	Область памяти, где храняться значения последовательности.
	*/
	void* value;	
};

struct block* chain_block(unsigned int _s, struct block* _b, exception _x);

struct block* unchain_block(struct block* _b);

struct value_pointer
{
	void* base;
	unsigned int offset;
};

struct value_pointer append_value(struct block* _b, unsigned int _s, struct value_pointer *_v);
