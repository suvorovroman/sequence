#include "defs.h"

/**\brief —лово состо€ни€ блока. 
*	
*	”пакованные в слово атрибуты блока (текущий размер, степень заполнени€ и т.п.).
*/
struct block_state
{
	/**\brief –азмер области значений.
	*
	*	’ранитс€ степень 2 размера из диапазона [0, 15], т.е. размер
	*	области значений может быть от 1 (2^0) до 32768(2^15).
	*/
	unsigned int exponent_of_size : 4;

	/**	\brief	—мещение первого бита свободной части области данных.
	*
	*	—мещение может быть от 0 (область даных свободна полностью) до 262144 (32768*8 = 2^18).
	*	¬ последнем случае она пуста.
	*/
	unsigned int free_space_offset : 19;
};

/**	Ѕлок последовательности.
*
*	Ѕлок пам€ти, который единовременно отводитс€ дл€ группы значений последовательности. –азмер пам€ти, отводимый блоку
*	кратен двум. ѕри создании блока он имеет минимальный размер, который нужен дл€ хранени€ одного значени€. ѕо мере
*	добавлени€ значений в блок его размер увеличиваетс€ вдвое пока не достигнет максимального размера в 2^15. ѕосле
*	чего создаетс€ новый блок. Ѕлоки последовательности объедин€ютс€ в цепочку так, что новые блоки добавл€ютс€ в начало 
*	цепочки.
*/
struct block
{
	/**\brief —лово состоа€ни€ блока. */
	struct block_state state;

	/**	\brief	”казатель на предыдущий блок цепочки.
	*
	*	Ѕлоки образуют цепочку, в начале которой находитс€ последний по времени блок.
	*	Ќовые значени€ всегда добавл€ютс€ в начало цепочки.
	*/
	struct block* previous;
	/**	\brief	”казатель на область значений.
	*
	*	ќбласть пам€ти, где хран€тьс€ значени€ последовательности.
	*/
	void* value;	
};

